import io.getstream.android.push.Dependencies
import io.getstream.android.push.Configuration

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "de.mannodermaus.android-junit5"

ext {
    PUBLISH_GROUP_ID = Configuration.artifactGroup
    PUBLISH_ARTIFACT_ID = 'stream-android-push'
    PUBLISH_VERSION = rootVersionName
}

apply from: "${rootDir}/scripts/publish-module.gradle"
apply from: "${rootDir}/scripts/android.gradle"

android {
    namespace 'io.getstream.android.push'
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled false
        }
    }

    resourcePrefix 'stream_'

    lintOptions {
        xmlReport false
    }

    testOptions.unitTests {
        returnDefaultValues = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-progressive',
                '-Xexplicit-api=strict',
        ]
    }
}

dependencies {
    // Tests
    testImplementation Dependencies.androidxTestJunit
    testImplementation Dependencies.junitJupiterApi
    testImplementation Dependencies.junitJupiterParams
    testRuntimeOnly Dependencies.junitJupiterEngine
    testRuntimeOnly Dependencies.junitVintageEngine

    testImplementation Dependencies.json
    testImplementation Dependencies.kluent
    testImplementation Dependencies.mockito
    testImplementation Dependencies.mockitoKotlin
    testImplementation Dependencies.okhttpMockWebserver
    testImplementation Dependencies.robolectric

    // Instrumentation tests
    androidTestImplementation Dependencies.junit4
    androidTestImplementation Dependencies.espressoCore
    androidTestImplementation Dependencies.androidxTestJunit

    detektPlugins(Dependencies.detektFormatting)
}
